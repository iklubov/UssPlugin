/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package org.intellij.sdk.language;

import com.intellij.psi.tree.IElementType;
import com.intellij.psi.TokenType;
import com.intellij.lexer.FlexLexer;
import org.intellij.sdk.language.psi.UssTypes;



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>UssGrammar.flex</tt>
 */
class UssLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int ELEMENT_DEFINITION = 2;
  public static final int BINDING_DEFINITION = 4;
  public static final int BINDING_PARAMS = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 15392 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\15\1\16\23\15"+
    "\1\17\1\15\1\20\1\21\12\15\1\22\10\12\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1"+
    "\32\1\33\1\34\1\35\1\36\2\12\1\15\1\37\3\12\1\40\10\12\1\41\1\42\5\15\1\43"+
    "\1\44\11\12\1\45\2\12\1\46\4\12\1\47\1\50\1\51\1\12\1\52\1\12\1\53\1\54\1"+
    "\55\3\12\51\15\1\56\3\15\1\57\1\60\4\15\1\61\12\12\1\62\u02c1\12\1\63\277"+
    "\12");

  /* The ZZ_CMAP_Y table has 3328 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\34"+
    "\13\1\15\1\16\1\17\1\1\7\13\1\20\1\21\1\13\1\22\4\13\1\23\10\13\1\22\12\13"+
    "\1\24\1\13\1\25\1\24\1\13\1\26\1\24\1\13\1\27\1\30\1\13\1\31\1\32\1\1\1\31"+
    "\4\13\1\33\6\13\1\34\1\35\1\36\1\1\3\13\1\37\6\13\1\16\3\13\1\40\2\13\1\41"+
    "\1\1\1\13\1\42\4\1\1\13\1\43\1\1\1\44\1\22\7\13\1\45\1\24\1\34\1\46\1\35\1"+
    "\47\1\50\1\51\1\45\1\16\1\52\1\46\1\35\1\53\1\54\1\55\1\56\1\57\1\60\1\22"+
    "\1\35\1\61\1\62\1\63\1\45\1\64\1\65\1\46\1\35\1\61\1\66\1\67\1\45\1\70\1\71"+
    "\1\72\1\73\1\33\1\74\1\75\1\56\1\1\1\76\1\77\1\35\1\100\1\101\1\102\1\45\1"+
    "\1\1\76\1\77\1\35\1\103\1\101\1\104\1\45\1\105\1\106\1\77\1\13\1\37\1\107"+
    "\1\110\1\45\1\111\1\112\1\113\1\13\1\114\1\115\1\116\1\56\1\117\1\24\2\13"+
    "\1\31\1\120\1\121\2\1\1\122\1\123\1\124\1\125\1\126\1\127\2\1\1\63\1\130\1"+
    "\121\1\131\1\132\1\13\1\133\1\24\1\134\1\132\1\13\1\133\1\135\3\1\4\13\1\121"+
    "\4\13\1\41\2\13\1\136\2\13\1\137\24\13\1\140\1\141\2\13\1\140\2\13\1\142\1"+
    "\143\1\14\3\13\1\143\3\13\1\37\2\1\1\13\1\1\5\13\1\144\1\24\45\13\1\36\1\13"+
    "\1\145\1\31\4\13\1\146\1\147\1\150\1\151\1\13\1\151\1\13\1\152\1\150\1\153"+
    "\5\13\1\154\1\121\1\1\1\155\1\121\5\13\1\26\2\13\1\31\4\13\1\57\1\13\1\120"+
    "\2\42\1\56\1\13\1\41\1\151\2\13\1\42\1\13\2\121\2\1\1\13\1\42\3\13\1\120\1"+
    "\13\1\36\2\121\1\156\1\120\4\1\4\13\1\42\1\121\1\157\1\152\7\13\1\152\3\13"+
    "\1\26\1\100\2\13\1\41\1\147\4\1\1\160\1\13\1\161\17\13\1\162\21\13\1\144\2"+
    "\13\1\144\1\163\1\13\1\41\3\13\1\164\1\165\1\166\1\133\1\165\1\167\1\1\1\170"+
    "\1\171\1\63\1\172\1\1\1\173\1\1\1\133\3\1\2\13\1\63\1\174\1\175\1\176\1\127"+
    "\1\177\1\1\2\13\1\147\62\1\1\56\2\13\1\121\161\1\2\13\1\120\2\13\1\120\10"+
    "\13\1\200\1\152\2\13\1\136\3\13\1\201\1\171\1\13\1\202\4\203\2\13\2\1\1\171"+
    "\35\1\1\204\1\1\1\24\1\205\1\24\4\13\1\206\1\24\4\13\1\137\1\207\1\13\1\41"+
    "\1\24\4\13\1\120\1\1\1\13\1\31\3\1\1\13\40\1\133\13\1\57\4\1\135\13\1\57\2"+
    "\1\10\13\1\133\4\1\2\13\1\41\20\13\1\133\1\13\1\42\1\1\3\13\1\210\7\13\1\16"+
    "\1\1\1\211\1\212\5\13\1\213\1\13\1\120\1\26\3\1\1\211\2\13\1\26\1\1\3\13\1"+
    "\152\4\13\1\57\1\121\1\13\1\214\2\13\1\41\2\13\1\152\1\13\1\133\4\13\1\215"+
    "\1\121\1\13\1\120\3\13\1\202\1\41\1\121\1\13\1\113\4\13\1\32\1\155\1\13\1"+
    "\216\1\217\1\220\1\203\2\13\1\137\1\57\7\13\1\221\1\121\72\13\1\152\1\13\1"+
    "\222\2\13\1\42\20\1\26\13\1\41\6\13\1\121\2\1\1\202\1\223\1\35\1\224\1\225"+
    "\6\13\1\16\1\1\1\226\25\13\1\41\1\1\4\13\1\212\2\13\1\26\2\1\1\42\1\13\1\1"+
    "\1\13\1\227\1\230\2\1\1\134\7\13\1\133\1\1\1\121\1\24\1\231\1\24\1\31\1\56"+
    "\4\13\1\120\1\232\1\233\2\1\1\234\1\13\1\14\1\235\2\41\2\1\7\13\1\31\4\1\3"+
    "\13\1\151\7\1\1\236\10\1\1\13\1\133\3\13\2\63\1\1\2\13\1\1\1\13\1\31\2\13"+
    "\1\31\1\13\1\41\2\13\1\237\1\240\2\1\11\13\1\41\1\121\2\13\1\237\1\13\1\42"+
    "\2\13\1\26\3\13\1\152\11\1\23\13\1\202\1\13\1\57\1\26\11\1\1\241\2\13\1\242"+
    "\1\13\1\57\1\13\1\202\1\13\1\120\4\1\1\13\1\243\1\13\1\57\1\13\1\121\4\1\3"+
    "\13\1\244\4\1\1\245\1\246\1\13\1\247\2\1\1\13\1\133\1\13\1\133\2\1\1\132\1"+
    "\13\1\202\1\1\3\13\1\57\1\13\1\57\1\13\1\32\1\13\1\16\6\1\4\13\1\147\3\1\3"+
    "\13\1\32\3\13\1\32\60\1\4\13\1\202\1\1\1\56\1\171\3\13\1\31\1\1\1\13\1\147"+
    "\1\121\3\13\1\134\1\1\2\13\1\250\4\13\1\251\1\252\2\1\1\13\1\22\1\13\1\253"+
    "\4\1\1\254\1\27\1\147\3\13\1\31\1\121\1\34\1\46\1\35\1\61\1\66\1\255\1\256"+
    "\1\151\10\1\4\13\1\31\1\121\2\1\4\13\1\257\1\121\12\1\3\13\1\260\1\63\1\261"+
    "\2\1\4\13\1\262\1\121\2\1\3\13\1\26\1\121\3\1\1\13\1\100\1\42\1\121\26\1\4"+
    "\13\1\121\1\171\34\1\3\13\1\147\20\1\1\35\2\13\1\14\1\63\1\121\1\1\1\212\1"+
    "\13\1\212\1\132\1\202\64\1\71\13\1\121\6\1\6\13\1\120\1\1\14\13\1\152\53\1"+
    "\2\13\1\120\75\1\44\13\1\202\33\1\43\13\1\147\1\13\1\120\1\121\6\1\1\13\1"+
    "\41\1\151\3\13\1\202\1\152\1\121\1\226\1\263\1\13\67\1\4\13\1\151\2\13\1\120"+
    "\1\171\1\13\4\1\1\63\1\1\76\13\1\133\1\1\57\13\1\32\20\1\1\16\77\1\6\13\1"+
    "\31\1\133\1\147\1\264\114\1\1\265\1\266\1\267\1\1\1\270\11\1\1\271\33\1\5"+
    "\13\1\134\3\13\1\150\1\272\1\273\1\274\3\13\1\275\1\276\1\13\1\277\1\300\1"+
    "\77\24\13\1\260\1\13\1\77\1\137\1\13\1\137\1\13\1\134\1\13\1\134\1\120\1\13"+
    "\1\120\1\13\1\35\1\13\1\35\1\13\1\301\3\13\40\1\3\13\1\222\2\13\1\133\1\302"+
    "\1\303\1\157\1\24\25\1\1\14\1\213\1\304\75\1\14\13\1\151\1\202\2\1\4\13\1"+
    "\31\1\121\112\1\1\274\1\13\1\305\1\306\1\307\1\310\1\311\1\312\1\313\1\42"+
    "\1\314\1\42\47\1\1\13\1\121\1\13\1\121\1\13\1\121\47\1\55\13\1\202\2\1\103"+
    "\13\1\151\15\13\1\41\150\13\1\16\25\1\41\13\1\41\56\1\17\13\41\1");

  /* The ZZ_CMAP_A table has 3280 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\4\1\10\2\4\1\10\22\0\1\4\1\7\1\3\1\11\1\6\3\7\1\1\1\2\6\7\12\5\6\7"+
    "\1\0\1\64\1\52\1\40\1\36\1\46\1\54\1\5\1\44\1\50\2\5\1\55\1\51\1\62\1\41\1"+
    "\33\1\5\1\37\1\34\1\60\1\65\1\5\1\56\3\5\4\0\1\5\1\0\1\30\1\12\1\15\1\25\1"+
    "\17\1\43\1\53\1\32\1\24\1\42\1\16\1\13\1\20\1\21\1\14\1\26\1\63\1\27\1\23"+
    "\1\22\1\61\1\35\1\45\1\47\1\31\1\57\1\7\1\0\1\7\7\0\1\4\12\0\1\4\11\0\1\5"+
    "\12\0\1\5\4\0\1\5\5\0\27\5\1\0\12\5\4\0\14\5\16\0\5\5\7\0\1\5\1\0\1\5\1\0"+
    "\5\5\1\0\2\5\2\0\4\5\1\0\1\5\6\0\1\5\1\0\3\5\1\0\1\5\1\0\4\5\1\0\23\5\1\0"+
    "\11\5\1\0\26\5\2\0\1\5\6\0\10\5\10\0\16\5\1\0\1\5\1\0\2\5\1\0\2\5\1\0\1\5"+
    "\10\0\13\5\5\0\3\5\15\0\12\5\4\0\6\5\1\0\10\5\2\0\12\5\1\0\23\5\2\0\14\5\2"+
    "\0\11\5\4\0\1\5\5\0\16\5\2\0\14\5\4\0\5\5\1\0\10\5\6\0\20\5\2\0\13\5\2\0\16"+
    "\5\1\0\1\5\3\0\4\5\2\0\11\5\2\0\2\5\2\0\4\5\10\0\1\5\4\0\2\5\1\0\1\5\1\0\3"+
    "\5\1\0\6\5\4\0\2\5\1\0\2\5\1\0\2\5\1\0\2\5\2\0\1\5\1\0\5\5\4\0\2\5\2\0\3\5"+
    "\3\0\1\5\7\0\4\5\1\0\1\5\7\0\20\5\13\0\3\5\1\0\11\5\1\0\2\5\1\0\2\5\1\0\5"+
    "\5\2\0\12\5\1\0\3\5\1\0\3\5\2\0\1\5\30\0\1\5\7\0\3\5\1\0\10\5\2\0\6\5\2\0"+
    "\2\5\2\0\3\5\10\0\2\5\4\0\2\5\1\0\1\5\1\0\1\5\20\0\2\5\1\0\6\5\3\0\3\5\1\0"+
    "\4\5\3\0\2\5\1\0\1\5\1\0\2\5\3\0\2\5\3\0\3\5\3\0\5\5\3\0\3\5\1\0\4\5\2\0\1"+
    "\5\6\0\1\5\10\0\4\5\1\0\10\5\1\0\3\5\1\0\30\5\3\0\10\5\1\0\3\5\1\0\4\5\7\0"+
    "\2\5\1\0\3\5\5\0\4\5\1\0\5\5\2\0\4\5\5\0\2\5\7\0\1\5\2\0\2\5\16\0\3\5\1\0"+
    "\10\5\1\0\7\5\1\0\3\5\1\0\5\5\5\0\4\5\7\0\1\5\12\0\6\5\2\0\2\5\1\0\22\5\3"+
    "\0\10\5\1\0\11\5\1\0\1\5\2\0\7\5\3\0\1\5\4\0\6\5\1\0\1\5\1\0\10\5\2\0\2\5"+
    "\14\0\17\5\1\0\12\5\7\0\2\5\1\0\1\5\2\0\2\5\1\0\1\5\2\0\1\5\6\0\4\5\1\0\7"+
    "\5\1\0\3\5\1\0\1\5\1\0\1\5\2\0\2\5\1\0\15\5\1\0\3\5\2\0\5\5\1\0\1\5\1\0\6"+
    "\5\2\0\12\5\2\0\4\5\10\0\2\5\13\0\1\5\1\0\1\5\1\0\1\5\4\0\12\5\1\0\24\5\3"+
    "\0\5\5\1\0\12\5\6\0\1\5\11\0\6\5\1\0\1\5\5\0\1\5\2\0\13\5\1\0\15\5\1\0\4\5"+
    "\2\0\7\5\1\0\1\5\1\0\4\5\2\0\1\5\1\0\4\5\2\0\7\5\1\0\1\5\1\0\4\5\2\0\16\5"+
    "\2\0\6\5\2\0\1\4\32\5\3\0\13\5\7\0\15\5\1\0\7\5\13\0\4\5\14\0\1\5\1\0\2\5"+
    "\14\0\4\5\3\0\1\5\4\0\2\5\15\0\3\5\11\0\1\5\23\0\10\5\1\0\23\5\1\0\2\5\6\0"+
    "\6\5\5\0\15\5\1\0\1\5\1\0\1\5\1\0\1\5\1\0\6\5\1\0\7\5\1\0\1\5\3\0\3\5\1\0"+
    "\7\5\3\0\4\5\2\0\6\5\4\0\13\4\15\0\2\4\5\0\1\4\17\0\1\5\4\0\1\5\12\0\1\4\1"+
    "\0\1\5\15\0\1\5\2\0\1\5\4\0\1\5\2\0\12\5\1\0\1\5\3\0\5\5\6\0\1\5\1\0\1\5\1"+
    "\0\1\5\1\0\4\5\1\0\1\5\5\0\5\5\4\0\1\5\1\0\5\5\6\0\15\5\7\0\10\5\11\0\7\5"+
    "\1\0\7\5\1\0\1\4\4\0\3\5\11\0\5\5\2\0\5\5\3\0\7\5\2\0\2\5\2\0\3\5\5\0\16\5"+
    "\1\0\12\5\1\0\1\5\7\0\11\5\2\0\27\5\2\0\15\5\3\0\1\5\1\0\1\5\2\0\1\5\16\0"+
    "\1\5\2\0\5\5\12\0\6\5\2\0\6\5\2\0\6\5\11\0\13\5\1\0\2\5\2\0\7\5\4\0\5\5\3"+
    "\0\5\5\5\0\12\5\1\0\5\5\1\0\1\5\1\0\2\5\1\0\2\5\1\0\12\5\3\0\15\5\3\0\2\5"+
    "\30\0\16\5\4\0\1\5\2\0\6\5\2\0\6\5\2\0\6\5\2\0\3\5\3\0\14\5\1\0\16\5\1\0\2"+
    "\5\1\0\1\5\15\0\1\5\2\0\4\5\4\0\10\5\1\0\5\5\12\0\6\5\2\0\1\5\1\0\14\5\1\0"+
    "\2\5\3\0\1\5\2\0\4\5\1\0\2\5\12\0\10\5\6\0\6\5\1\0\2\5\5\0\10\5\1\0\3\5\1"+
    "\0\13\5\4\0\3\5\4\0\5\5\2\0\1\5\11\0\5\5\5\0\3\5\3\0\13\5\1\0\1\5\3\0\10\5"+
    "\6\0\1\5\1\0\7\5\1\0\1\5\1\0\4\5\1\0\2\5\6\0\1\5\5\0\7\5\2\0\7\5\3\0\6\5\1"+
    "\0\1\5\10\0\6\5\2\0\10\5\10\0\6\5\2\0\1\5\3\0\1\5\13\0\10\5\5\0\15\5\3\0\2"+
    "\5\6\0\5\5\3\0\6\5\10\0\10\5\2\0\7\5\16\0\4\5\4\0\3\5\15\0\1\5\2\0\2\5\2\0"+
    "\4\5\1\0\14\5\1\0\1\5\1\0\7\5\1\0\21\5\1\0\4\5\2\0\10\5\1\0\7\5\1\0\14\5\1"+
    "\0\4\5\1\0\5\5\1\0\1\5\3\0\11\5\1\0\10\5\2\0\2\5\5\0\1\5\16\0\1\5\13\0\2\5"+
    "\1\0\2\5\1\0\5\5\6\0\2\5\1\0\1\5\2\0\1\5\1\0\12\5\1\0\4\5\1\0\1\5\1\0\1\5"+
    "\6\0\1\5\4\0\1\5\1\0\1\5\1\0\1\5\1\0\3\5\1\0\2\5\1\0\1\5\2\0\1\5\1\0\1\5\1"+
    "\0\1\5\1\0\1\5\1\0\1\5\1\0\2\5\1\0\1\5\2\0\4\5\1\0\7\5\1\0\4\5\1\0\4\5\1\0"+
    "\1\5\1\0\12\5\1\0\5\5\1\0\3\5\1\0\5\5\1\0\5\5");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\1\2\1\3\1\4\3\5\1\6\1\1"+
    "\4\5\1\1\1\7\1\10\1\11\24\12\1\13\1\14"+
    "\2\13\1\15\6\5\1\16\1\0\15\12\1\17\47\12"+
    "\3\5\1\20\2\5\102\12\1\5\1\21\3\5\101\12"+
    "\1\22\1\23\2\5\16\12\2\17\3\12\1\17\31\12"+
    "\1\17\14\12\1\17\1\12\1\5\1\24\63\12\2\17"+
    "\5\12\1\25\106\12\1\17\30\12\1\17\2\12\1\17"+
    "\20\12\1\17\42\12\1\17\51\12\1\17\7\12";

  private static int [] zzUnpackAction() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\66\0\154\0\242\0\330\0\330\0\330\0\u010e"+
    "\0\u0144\0\u017a\0\330\0\u01b0\0\u01e6\0\u021c\0\u0252\0\u0288"+
    "\0\u02be\0\u02f4\0\u032a\0\u0360\0\330\0\u0396\0\u03cc\0\u0402"+
    "\0\u0438\0\u046e\0\u04a4\0\u04da\0\u0510\0\u0546\0\u057c\0\u05b2"+
    "\0\u05e8\0\u061e\0\u0654\0\u068a\0\u06c0\0\u06f6\0\u072c\0\u0762"+
    "\0\u0798\0\330\0\330\0\u07ce\0\u0804\0\u01e6\0\u083a\0\u0870"+
    "\0\u08a6\0\u08dc\0\u0912\0\u0948\0\330\0\u02f4\0\u097e\0\u09b4"+
    "\0\u09ea\0\u0a20\0\u0a56\0\u0a8c\0\u0ac2\0\u0af8\0\u0b2e\0\u0b64"+
    "\0\u0b9a\0\u0bd0\0\u0c06\0\u0396\0\u0c3c\0\u0c72\0\u0ca8\0\u0cde"+
    "\0\u0d14\0\u0d4a\0\u0d80\0\u0db6\0\u0dec\0\u0e22\0\u0e58\0\u0e8e"+
    "\0\u0ec4\0\u0efa\0\u0f30\0\u0f66\0\u0f9c\0\u0fd2\0\u1008\0\u103e"+
    "\0\u1074\0\u10aa\0\u10e0\0\u1116\0\u114c\0\u1182\0\u11b8\0\u11ee"+
    "\0\u1224\0\u125a\0\u1290\0\u12c6\0\u12fc\0\u1332\0\u1368\0\u139e"+
    "\0\u13d4\0\u140a\0\u1440\0\u1476\0\u14ac\0\u14e2\0\u0144\0\u1518"+
    "\0\u154e\0\u1584\0\u15ba\0\u15f0\0\u1626\0\u165c\0\u1692\0\u16c8"+
    "\0\u16fe\0\u1734\0\u176a\0\u17a0\0\u17d6\0\u180c\0\u1842\0\u1878"+
    "\0\u18ae\0\u18e4\0\u191a\0\u1950\0\u1986\0\u19bc\0\u19f2\0\u1a28"+
    "\0\u1a5e\0\u1a94\0\u1aca\0\u1b00\0\u1b36\0\u1b6c\0\u1ba2\0\u1bd8"+
    "\0\u1c0e\0\u1c44\0\u1c7a\0\u1cb0\0\u1ce6\0\u1d1c\0\u1d52\0\u1d88"+
    "\0\u1dbe\0\u1df4\0\u1e2a\0\u1e60\0\u1e96\0\u1ecc\0\u1f02\0\u1f38"+
    "\0\u1f6e\0\u1fa4\0\u1fda\0\u2010\0\u2046\0\u207c\0\u20b2\0\u20e8"+
    "\0\u211e\0\u2154\0\u218a\0\u21c0\0\u21f6\0\u222c\0\u2262\0\u2298"+
    "\0\u22ce\0\u2304\0\u233a\0\u2370\0\u0144\0\u23a6\0\u23dc\0\u2412"+
    "\0\u2448\0\u247e\0\u24b4\0\u24ea\0\u2520\0\u2556\0\u258c\0\u25c2"+
    "\0\u25f8\0\u262e\0\u2664\0\u269a\0\u26d0\0\u2706\0\u273c\0\u2772"+
    "\0\u27a8\0\u27de\0\u2814\0\u284a\0\u2880\0\u28b6\0\u28ec\0\u2922"+
    "\0\u2958\0\u298e\0\u29c4\0\u29fa\0\u2a30\0\u2a66\0\u2a9c\0\u2ad2"+
    "\0\u2b08\0\u2b3e\0\u2b74\0\u2baa\0\u2be0\0\u2c16\0\u2c4c\0\u2c82"+
    "\0\u2cb8\0\u2cee\0\u2d24\0\u2d5a\0\u2d90\0\u2dc6\0\u2dfc\0\u2e32"+
    "\0\u2e68\0\u2e9e\0\u2ed4\0\u2f0a\0\u2f40\0\u2f76\0\u2fac\0\u2fe2"+
    "\0\u3018\0\u304e\0\u3084\0\u30ba\0\u30f0\0\u3126\0\u315c\0\u3192"+
    "\0\u31c8\0\u0144\0\u0144\0\u31fe\0\u3234\0\u326a\0\u32a0\0\u32d6"+
    "\0\u330c\0\u3342\0\u3378\0\u33ae\0\u33e4\0\u341a\0\u3450\0\u3486"+
    "\0\u34bc\0\u34f2\0\u3528\0\u355e\0\u3594\0\u35ca\0\u3600\0\u3636"+
    "\0\u366c\0\u36a2\0\u36d8\0\u370e\0\u3744\0\u377a\0\u37b0\0\u37e6"+
    "\0\u381c\0\u3852\0\u3888\0\u38be\0\u38f4\0\u392a\0\u3960\0\u3996"+
    "\0\u39cc\0\u3a02\0\u3a38\0\u3a6e\0\u3aa4\0\u3ada\0\u3b10\0\u3b46"+
    "\0\u3b7c\0\u3bb2\0\u3be8\0\u3c1e\0\u3c54\0\u3c8a\0\u3cc0\0\u3cf6"+
    "\0\u3d2c\0\u3d62\0\u3d98\0\u3dce\0\u3e04\0\u3e3a\0\u3e70\0\u3ea6"+
    "\0\u3edc\0\u3f12\0\u0144\0\u3f48\0\u3f7e\0\u3fb4\0\u3fea\0\u4020"+
    "\0\u4056\0\u408c\0\u40c2\0\u40f8\0\u412e\0\u4164\0\u419a\0\u41d0"+
    "\0\u4206\0\u423c\0\u4272\0\u42a8\0\u42de\0\u3ea6\0\u4314\0\u434a"+
    "\0\u4380\0\u43b6\0\u43ec\0\u4422\0\u4458\0\u448e\0\u44c4\0\u44fa"+
    "\0\u4530\0\u4566\0\u459c\0\u45d2\0\u4608\0\u463e\0\u4674\0\u46aa"+
    "\0\u46e0\0\u4716\0\u474c\0\u4782\0\u47b8\0\u47ee\0\u4824\0\u485a"+
    "\0\u4890\0\u48c6\0\u48fc\0\u4932\0\u4968\0\u499e\0\u49d4\0\u4a0a"+
    "\0\u4a40\0\u4a76\0\u4aac\0\u4ae2\0\u4b18\0\u0144\0\u4b4e\0\u4b84"+
    "\0\u4bba\0\u4bf0\0\u4c26\0\u4c5c\0\u4c92\0\u4cc8\0\u4cfe\0\u4d34"+
    "\0\u4d6a\0\u4da0\0\u4dd6\0\u4e0c\0\u4e42\0\u4e78\0\u4eae\0\u4ee4"+
    "\0\u4f1a\0\u4f50\0\u4f86\0\u4fbc\0\u4ff2\0\u5028\0\u505e\0\u5094"+
    "\0\u50ca\0\u5100\0\u5136\0\u516c\0\u51a2\0\u51d8\0\u520e\0\u5244"+
    "\0\u527a\0\u52b0\0\u52e6\0\u531c\0\u5352\0\u5388\0\u53be\0\u53f4"+
    "\0\u542a\0\u5460\0\u5496\0\u54cc\0\u5502\0\u5538\0\u556e\0\u55a4"+
    "\0\u55da\0\u5610\0\u5646\0\u567c\0\u56b2\0\u56e8\0\u571e\0\u5754"+
    "\0\u578a\0\u57c0\0\u57f6\0\u582c\0\u5862\0\u5898\0\u58ce\0\u5904"+
    "\0\u593a\0\u5970\0\u59a6\0\u59dc\0\u5a12\0\u5a48\0\u5a7e\0\u5ab4"+
    "\0\u5aea\0\u5b20\0\u5b56\0\u5b8c\0\u5bc2\0\u5bf8\0\u5c2e\0\u5c64"+
    "\0\u5c9a\0\u5cd0\0\u5d06\0\u5d3c\0\u5d72\0\u5da8\0\u5dde\0\u5e14"+
    "\0\u5e4a\0\u5e80\0\u5eb6\0\u5eec\0\u5f22\0\u5f58\0\u5f8e\0\u5fc4"+
    "\0\u5ffa\0\u6030\0\u6066\0\u609c\0\u60d2\0\u6108\0\u613e\0\u6174"+
    "\0\u61aa\0\u61e0\0\u6216\0\u624c\0\u6282\0\u62b8\0\u62ee\0\u6324"+
    "\0\u635a\0\u6390\0\u63c6\0\u63fc\0\u6432\0\u6468\0\u649e\0\u64d4"+
    "\0\u650a\0\u6540\0\u6576\0\u65ac\0\u65e2\0\u6618\0\u664e\0\u6684"+
    "\0\u66ba\0\u66f0\0\u6726\0\u675c\0\u6792\0\u67c8\0\u67fe\0\u6834"+
    "\0\u686a\0\u68a0\0\u68d6\0\u690c\0\u6942\0\u6978\0\u69ae\0\u69e4"+
    "\0\u6a1a\0\u6a50\0\u6a86\0\u6abc\0\u6af2\0\u6b28\0\u6b5e\0\u6b94"+
    "\0\u6bca\0\u6c00\0\u6c36\0\u6c6c\0\u6ca2\0\u6cd8\0\u6d0e\0\u6d44"+
    "\0\u6d7a\0\u6db0\0\u6de6\0\u6e1c\0\u6e52\0\u6e88\0\u6ebe\0\u6ef4"+
    "\0\u6f2a\0\u6f60\0\u6f96\0\u6fcc\0\u7002\0\u7038\0\u706e\0\u70a4"+
    "\0\u70da\0\u7110\0\u7146\0\u717c\0\u71b2\0\u71e8\0\u721e\0\u7254"+
    "\0\u728a\0\u72c0\0\u72f6\0\u732c\0\u7362\0\u7398\0\u73ce\0\u7404"+
    "\0\u743a\0\u7470\0\u74a6\0\u74dc\0\u7512\0\u7548";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\7\1\5\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\2\11\1\17\1\11\1\20\4\11"+
    "\1\21\41\11\1\5\1\22\2\5\1\23\1\24\2\5"+
    "\1\23\1\5\54\24\3\5\1\25\1\23\1\26\2\5"+
    "\1\23\1\5\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\26\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\26\1\45\2\26\1\46\5\26\1\47\1\26"+
    "\1\50\5\26\1\51\12\26\1\5\2\52\1\53\1\23"+
    "\1\54\1\55\1\52\1\23\1\5\54\54\72\0\1\10"+
    "\3\0\1\10\62\0\1\11\4\0\54\11\6\0\1\12"+
    "\63\0\1\10\3\0\1\14\55\0\10\56\1\0\55\56"+
    "\5\0\1\11\4\0\1\11\1\57\10\11\1\60\41\11"+
    "\5\0\1\11\4\0\1\11\1\61\7\11\1\62\42\11"+
    "\5\0\1\11\4\0\1\11\1\63\52\11\5\0\1\11"+
    "\4\0\6\11\1\64\45\11\2\0\1\65\1\0\1\66"+
    "\3\0\1\66\61\0\1\23\3\0\1\23\62\0\1\24"+
    "\4\0\54\24\5\0\1\26\4\0\54\26\5\0\1\26"+
    "\4\0\1\26\1\67\14\26\1\70\35\26\5\0\1\26"+
    "\4\0\5\26\1\71\4\26\1\72\3\26\1\73\35\26"+
    "\5\0\1\26\4\0\1\74\53\26\5\0\1\26\4\0"+
    "\1\26\1\75\1\76\13\26\1\77\1\26\1\100\33\26"+
    "\5\0\1\26\4\0\5\26\1\101\46\26\5\0\1\26"+
    "\4\0\7\26\1\102\13\26\1\103\30\26\5\0\1\26"+
    "\4\0\3\26\1\104\1\26\1\105\7\26\1\106\1\107"+
    "\35\26\5\0\1\26\4\0\2\26\1\110\2\26\1\111"+
    "\4\26\1\112\2\26\1\113\36\26\5\0\1\26\4\0"+
    "\1\26\1\114\1\115\1\116\1\26\1\117\2\26\1\120"+
    "\6\26\1\121\27\26\1\122\4\26\5\0\1\26\4\0"+
    "\6\26\1\123\1\124\44\26\5\0\1\26\4\0\5\26"+
    "\1\125\4\26\1\126\2\26\1\127\1\130\35\26\5\0"+
    "\1\26\4\0\1\26\1\131\1\132\2\26\1\133\7\26"+
    "\1\134\36\26\5\0\1\26\4\0\5\26\1\135\46\26"+
    "\5\0\1\26\4\0\3\26\1\136\4\26\1\137\3\26"+
    "\1\140\37\26\5\0\1\26\4\0\16\26\1\141\35\26"+
    "\5\0\1\26\4\0\12\26\1\142\3\26\1\143\27\26"+
    "\1\144\5\26\5\0\1\26\4\0\2\26\1\145\2\26"+
    "\1\146\4\26\1\147\3\26\1\150\16\26\1\151\16\26"+
    "\5\0\1\26\4\0\16\26\1\152\35\26\5\0\1\26"+
    "\4\0\5\26\1\153\46\26\5\0\1\54\4\0\54\54"+
    "\6\0\1\55\64\0\1\11\4\0\2\11\1\154\51\11"+
    "\5\0\1\11\4\0\7\11\1\155\44\11\5\0\1\11"+
    "\4\0\16\11\1\156\35\11\5\0\1\11\4\0\11\11"+
    "\1\157\42\11\5\0\1\11\4\0\5\11\1\160\46\11"+
    "\5\0\1\11\4\0\14\11\1\161\37\11\5\0\1\26"+
    "\4\0\2\26\1\162\44\26\1\163\4\26\5\0\1\26"+
    "\4\0\10\26\1\164\43\26\5\0\1\26\4\0\23\26"+
    "\1\165\30\26\5\0\1\26\4\0\7\26\1\166\44\26"+
    "\5\0\1\26\4\0\41\26\1\104\12\26\5\0\1\26"+
    "\4\0\30\26\1\167\23\26\5\0\1\26\4\0\2\26"+
    "\1\170\7\26\1\171\3\26\1\172\35\26\5\0\1\26"+
    "\4\0\1\26\1\173\5\26\1\174\37\26\1\175\4\26"+
    "\5\0\1\26\4\0\10\26\1\176\43\26\5\0\1\26"+
    "\4\0\12\26\1\177\3\26\1\200\35\26\5\0\1\26"+
    "\4\0\17\26\1\201\34\26\5\0\1\26\4\0\10\26"+
    "\1\202\43\26\5\0\1\26\4\0\5\26\1\203\46\26"+
    "\5\0\1\26\4\0\7\26\1\204\44\26\5\0\1\26"+
    "\4\0\37\26\1\205\14\26\5\0\1\26\4\0\4\26"+
    "\1\206\47\26\5\0\1\26\4\0\2\26\1\207\51\26"+
    "\5\0\1\26\4\0\35\26\1\210\16\26\5\0\1\26"+
    "\4\0\6\26\1\211\45\26\5\0\1\26\4\0\16\26"+
    "\1\212\35\26\5\0\1\26\4\0\12\26\1\213\41\26"+
    "\5\0\1\26\4\0\47\26\1\214\4\26\5\0\1\26"+
    "\4\0\2\26\1\215\12\26\1\216\36\26\5\0\1\26"+
    "\4\0\15\26\1\217\33\26\1\220\2\26\5\0\1\26"+
    "\4\0\16\26\1\221\1\222\34\26\5\0\1\26\4\0"+
    "\7\26\1\223\44\26\5\0\1\26\4\0\1\224\53\26"+
    "\5\0\1\26\4\0\5\26\1\225\46\26\5\0\1\26"+
    "\4\0\2\26\1\226\6\26\1\227\1\26\1\230\1\231"+
    "\37\26\5\0\1\26\4\0\1\232\53\26\5\0\1\26"+
    "\4\0\11\26\1\233\3\26\1\234\36\26\5\0\1\26"+
    "\4\0\2\26\1\235\13\26\1\236\35\26\5\0\1\26"+
    "\4\0\10\26\1\237\43\26\5\0\1\26\4\0\47\26"+
    "\1\240\4\26\5\0\1\26\4\0\14\26\1\241\37\26"+
    "\5\0\1\26\4\0\15\26\1\242\36\26\5\0\1\26"+
    "\4\0\12\26\1\243\41\26\5\0\1\26\4\0\11\26"+
    "\1\244\2\26\1\245\34\26\1\246\2\26\5\0\1\26"+
    "\4\0\10\26\1\247\43\26\5\0\1\26\4\0\1\26"+
    "\1\250\52\26\5\0\1\26\4\0\14\26\1\251\37\26"+
    "\5\0\1\26\4\0\7\26\1\252\44\26\5\0\1\26"+
    "\4\0\11\26\1\253\42\26\5\0\1\26\4\0\15\26"+
    "\1\104\36\26\5\0\1\26\4\0\12\26\1\254\41\26"+
    "\5\0\1\26\4\0\3\26\1\255\50\26\5\0\1\26"+
    "\4\0\16\26\1\256\35\26\5\0\1\26\4\0\1\26"+
    "\1\257\13\26\1\260\36\26\5\0\1\26\4\0\13\26"+
    "\1\257\40\26\5\0\1\26\4\0\36\26\1\261\15\26"+
    "\5\0\1\26\4\0\10\26\1\262\43\26\5\0\1\26"+
    "\4\0\7\26\1\263\44\26\5\0\1\11\4\0\3\11"+
    "\1\264\50\11\5\0\1\11\4\0\13\11\1\265\40\11"+
    "\5\0\1\11\4\0\11\11\1\266\42\11\5\0\1\11"+
    "\4\0\6\11\1\267\45\11\5\0\1\11\4\0\2\11"+
    "\1\270\51\11\5\0\1\26\4\0\3\26\1\271\50\26"+
    "\5\0\1\26\4\0\15\26\1\272\36\26\5\0\1\26"+
    "\4\0\10\26\1\273\43\26\5\0\1\26\4\0\5\26"+
    "\1\274\46\26\5\0\1\26\4\0\5\26\1\275\46\26"+
    "\5\0\1\26\4\0\5\26\1\276\46\26\5\0\1\26"+
    "\4\0\3\26\1\277\50\26\5\0\1\26\4\0\3\26"+
    "\1\300\1\301\7\26\1\201\37\26\5\0\1\26\4\0"+
    "\11\26\1\302\42\26\5\0\1\26\4\0\1\26\1\303"+
    "\1\304\51\26\5\0\1\26\4\0\3\26\1\305\4\26"+
    "\1\306\43\26\5\0\1\26\4\0\7\26\1\307\44\26"+
    "\5\0\1\26\4\0\3\26\1\310\50\26\5\0\1\26"+
    "\4\0\1\26\1\311\52\26\5\0\1\26\4\0\7\26"+
    "\1\312\44\26\5\0\1\26\4\0\1\313\53\26\5\0"+
    "\1\26\4\0\12\26\1\314\41\26\5\0\1\26\4\0"+
    "\7\26\1\315\44\26\5\0\1\26\4\0\47\26\1\104"+
    "\4\26\5\0\1\26\4\0\5\26\1\316\46\26\5\0"+
    "\1\26\4\0\5\26\1\317\46\26\5\0\1\26\4\0"+
    "\1\26\1\320\52\26\5\0\1\26\4\0\10\26\1\321"+
    "\43\26\5\0\1\26\4\0\5\26\1\322\46\26\5\0"+
    "\1\26\4\0\7\26\1\323\44\26\5\0\1\26\4\0"+
    "\3\26\1\257\50\26\5\0\1\26\4\0\7\26\1\324"+
    "\44\26\5\0\1\26\4\0\14\26\1\325\37\26\5\0"+
    "\1\26\4\0\2\26\1\326\51\26\5\0\1\26\4\0"+
    "\23\26\1\327\30\26\5\0\1\26\4\0\47\26\1\330"+
    "\4\26\5\0\1\26\4\0\41\26\1\331\12\26\5\0"+
    "\1\26\4\0\1\26\1\257\52\26\5\0\1\26\4\0"+
    "\3\26\1\104\50\26\5\0\1\26\4\0\11\26\1\332"+
    "\42\26\5\0\1\26\4\0\34\26\1\333\17\26\5\0"+
    "\1\26\4\0\47\26\1\334\4\26\5\0\1\26\4\0"+
    "\10\26\1\335\43\26\5\0\1\26\4\0\5\26\1\336"+
    "\46\26\5\0\1\26\4\0\47\26\1\337\4\26\5\0"+
    "\1\26\4\0\47\26\1\340\4\26\5\0\1\26\4\0"+
    "\14\26\1\341\37\26\5\0\1\26\4\0\5\26\1\342"+
    "\46\26\5\0\1\26\4\0\14\26\1\343\37\26\5\0"+
    "\1\26\4\0\41\26\1\344\12\26\5\0\1\26\4\0"+
    "\16\26\1\345\35\26\5\0\1\26\4\0\15\26\1\346"+
    "\36\26\5\0\1\26\4\0\47\26\1\347\4\26\5\0"+
    "\1\26\4\0\42\26\1\350\11\26\5\0\1\26\4\0"+
    "\6\26\1\351\45\26\5\0\1\26\4\0\2\26\1\352"+
    "\5\26\1\353\1\26\1\354\41\26\5\0\1\26\4\0"+
    "\5\26\1\355\46\26\5\0\1\26\4\0\47\26\1\356"+
    "\4\26\5\0\1\26\4\0\12\26\1\357\41\26\5\0"+
    "\1\26\4\0\16\26\1\360\35\26\5\0\1\26\4\0"+
    "\5\26\1\361\46\26\5\0\1\26\4\0\13\26\1\362"+
    "\40\26\5\0\1\26\4\0\12\26\1\363\41\26\5\0"+
    "\1\26\4\0\1\26\1\364\52\26\5\0\1\26\4\0"+
    "\47\26\1\302\4\26\5\0\1\26\4\0\10\26\1\365"+
    "\43\26\5\0\1\26\4\0\5\26\1\104\46\26\5\0"+
    "\1\26\4\0\11\26\1\366\42\26\5\0\1\26\4\0"+
    "\7\26\1\367\44\26\5\0\1\26\4\0\3\26\1\370"+
    "\50\26\5\0\1\26\4\0\5\26\1\371\46\26\5\0"+
    "\1\11\4\0\4\11\1\372\47\11\5\0\1\11\4\0"+
    "\11\11\1\373\42\11\5\0\1\11\4\0\5\11\1\374"+
    "\46\11\5\0\1\11\4\0\15\11\1\375\36\11\5\0"+
    "\1\26\4\0\4\26\1\376\47\26\5\0\1\26\4\0"+
    "\37\26\1\377\3\26\1\u0100\10\26\5\0\1\26\4\0"+
    "\1\26\1\u0101\52\26\5\0\1\26\4\0\1\26\1\u0102"+
    "\52\26\5\0\1\26\4\0\16\26\1\u0103\35\26\5\0"+
    "\1\26\4\0\3\26\1\u0104\50\26\5\0\1\26\4\0"+
    "\4\26\1\104\47\26\5\0\1\26\4\0\4\26\1\u0105"+
    "\47\26\5\0\1\26\4\0\43\26\1\u0106\10\26\5\0"+
    "\1\26\4\0\11\26\1\104\42\26\5\0\1\26\4\0"+
    "\5\26\1\u0107\46\26\5\0\1\26\4\0\15\26\1\u0108"+
    "\36\26\5\0\1\26\4\0\16\26\1\337\35\26\5\0"+
    "\1\26\4\0\15\26\1\u0109\1\u010a\35\26\5\0\1\26"+
    "\4\0\10\26\1\u010b\43\26\5\0\1\26\4\0\20\26"+
    "\1\u010c\33\26\5\0\1\26\4\0\13\26\1\u010d\40\26"+
    "\5\0\1\26\4\0\41\26\1\u010e\12\26\5\0\1\26"+
    "\4\0\2\26\1\u010f\51\26\5\0\1\26\4\0\10\26"+
    "\1\u0110\43\26\5\0\1\26\4\0\10\26\1\u0111\43\26"+
    "\5\0\1\26\4\0\5\26\1\u0112\46\26\5\0\1\26"+
    "\4\0\22\26\1\u0113\31\26\5\0\1\26\4\0\10\26"+
    "\1\u0114\43\26\5\0\1\26\4\0\26\26\1\u0115\25\26"+
    "\5\0\1\26\4\0\1\26\1\u0116\7\26\1\u0117\30\26"+
    "\1\u0118\11\26\5\0\1\26\4\0\11\26\1\u0119\42\26"+
    "\5\0\1\26\4\0\13\26\1\u011a\40\26\5\0\1\26"+
    "\4\0\5\26\1\u011b\46\26\5\0\1\26\4\0\1\26"+
    "\1\u011c\52\26\5\0\1\26\4\0\5\26\1\u011d\46\26"+
    "\5\0\1\26\4\0\5\26\1\u011e\46\26\5\0\1\26"+
    "\4\0\5\26\1\u011f\46\26\5\0\1\26\4\0\10\26"+
    "\1\u0120\43\26\5\0\1\26\4\0\7\26\1\u0121\44\26"+
    "\5\0\1\26\4\0\10\26\1\u0122\43\26\5\0\1\26"+
    "\4\0\16\26\1\u011e\35\26\5\0\1\26\4\0\35\26"+
    "\1\u0123\16\26\5\0\1\26\4\0\10\26\1\104\43\26"+
    "\5\0\1\26\4\0\41\26\1\u0124\12\26\5\0\1\26"+
    "\4\0\16\26\1\u0125\35\26\5\0\1\26\4\0\3\26"+
    "\1\u0126\50\26\5\0\1\26\4\0\14\26\1\u0121\37\26"+
    "\5\0\1\26\4\0\26\26\1\u0127\12\26\1\u0128\12\26"+
    "\5\0\1\26\4\0\25\26\1\u0129\26\26\5\0\1\26"+
    "\4\0\16\26\1\u012a\35\26\5\0\1\26\4\0\14\26"+
    "\1\u012b\37\26\5\0\1\26\4\0\15\26\1\u012c\36\26"+
    "\5\0\1\26\4\0\16\26\1\u012d\35\26\5\0\1\26"+
    "\4\0\47\26\1\u012e\4\26\5\0\1\26\4\0\15\26"+
    "\1\u012f\36\26\5\0\1\26\4\0\45\26\1\257\6\26"+
    "\5\0\1\26\4\0\16\26\1\u0130\35\26\5\0\1\26"+
    "\4\0\5\26\1\u0131\46\26\5\0\1\26\4\0\2\26"+
    "\1\u0132\51\26\5\0\1\26\4\0\11\26\1\u0133\42\26"+
    "\5\0\1\26\4\0\16\26\1\143\35\26\5\0\1\26"+
    "\4\0\1\26\1\u0134\52\26\5\0\1\26\4\0\1\222"+
    "\53\26\5\0\1\26\4\0\5\26\1\u0135\46\26\5\0"+
    "\1\26\4\0\47\26\1\u0136\4\26\5\0\1\26\4\0"+
    "\10\26\1\u0137\43\26\5\0\1\26\4\0\11\26\1\227"+
    "\42\26\5\0\1\26\4\0\20\26\1\u0138\33\26\5\0"+
    "\1\26\4\0\15\26\1\u0139\36\26\5\0\1\11\4\0"+
    "\7\11\1\u013a\44\11\5\0\1\11\4\0\10\11\1\u013b"+
    "\43\11\5\0\1\26\4\0\22\26\1\u013c\31\26\5\0"+
    "\1\26\4\0\16\26\1\u013d\35\26\5\0\1\26\4\0"+
    "\16\26\1\u013e\35\26\5\0\1\26\4\0\5\26\1\u013f"+
    "\46\26\5\0\1\26\4\0\46\26\1\u0140\5\26\5\0"+
    "\1\26\4\0\15\26\1\u0141\36\26\5\0\1\26\4\0"+
    "\10\26\1\u0142\43\26\5\0\1\26\4\0\22\26\1\u0143"+
    "\31\26\5\0\1\26\4\0\12\26\1\u0131\41\26\5\0"+
    "\1\26\4\0\3\26\1\u0144\50\26\5\0\1\26\4\0"+
    "\46\26\1\u0145\5\26\5\0\1\26\4\0\2\26\1\u0146"+
    "\51\26\5\0\1\26\4\0\12\26\1\u0147\41\26\5\0"+
    "\1\26\4\0\13\26\1\u0148\40\26\5\0\1\26\4\0"+
    "\21\26\1\u0149\2\26\1\u014a\27\26\5\0\1\26\4\0"+
    "\21\26\1\u014b\32\26\5\0\1\26\4\0\5\26\1\u014c"+
    "\46\26\5\0\1\26\4\0\16\26\1\u014d\35\26\5\0"+
    "\1\26\4\0\17\26\1\u014e\34\26\5\0\1\26\4\0"+
    "\22\26\1\u014f\31\26\5\0\1\26\4\0\11\26\1\u0150"+
    "\42\26\5\0\1\26\4\0\3\26\1\u0151\50\26\5\0"+
    "\1\26\4\0\12\26\1\u013d\41\26\5\0\1\26\4\0"+
    "\2\26\1\u0152\51\26\5\0\1\26\4\0\12\26\1\u0153"+
    "\41\26\5\0\1\26\4\0\10\26\1\u0154\43\26\5\0"+
    "\1\26\4\0\2\26\1\u0155\51\26\5\0\1\26\4\0"+
    "\12\26\1\u0156\41\26\5\0\1\26\4\0\27\26\1\u0157"+
    "\24\26\5\0\1\26\4\0\32\26\1\u0158\13\26\1\u0159"+
    "\5\26\5\0\1\26\4\0\1\26\1\u015a\52\26\5\0"+
    "\1\26\4\0\15\26\1\u015b\36\26\5\0\1\26\4\0"+
    "\7\26\1\213\44\26\5\0\1\26\4\0\22\26\1\u013c"+
    "\3\26\1\u015c\25\26\5\0\1\26\4\0\12\26\1\u015d"+
    "\41\26\5\0\1\26\4\0\16\26\1\363\35\26\5\0"+
    "\1\26\4\0\52\26\1\u015e\1\26\5\0\1\26\4\0"+
    "\27\26\1\u015f\24\26\5\0\1\26\4\0\22\26\1\u0160"+
    "\1\26\1\u0161\1\u0162\12\26\1\u0163\3\26\1\u0164\1\26"+
    "\1\u0165\5\26\5\0\1\26\4\0\10\26\1\u0166\43\26"+
    "\5\0\1\26\4\0\10\26\1\u0167\43\26\5\0\1\26"+
    "\4\0\47\26\1\u0168\4\26\5\0\1\26\4\0\16\26"+
    "\1\u0169\35\26\5\0\1\26\4\0\5\26\1\u016a\46\26"+
    "\5\0\1\26\4\0\1\26\1\u0133\52\26\5\0\1\26"+
    "\4\0\50\26\1\u016b\3\26\5\0\1\26\4\0\16\26"+
    "\1\u016c\35\26\5\0\1\26\4\0\15\26\1\u016d\36\26"+
    "\5\0\1\26\4\0\15\26\1\213\36\26\5\0\1\26"+
    "\4\0\12\26\1\u016e\41\26\5\0\1\26\4\0\10\26"+
    "\1\u016f\43\26\5\0\1\26\4\0\11\26\1\337\42\26"+
    "\5\0\1\26\4\0\7\26\1\u0170\44\26\5\0\1\26"+
    "\4\0\46\26\1\u0171\5\26\5\0\1\26\4\0\5\26"+
    "\1\u0172\46\26\5\0\1\26\4\0\32\26\1\u0173\21\26"+
    "\5\0\1\26\4\0\15\26\1\257\36\26\5\0\1\26"+
    "\4\0\34\26\1\u0174\17\26\5\0\1\26\4\0\24\26"+
    "\1\u014a\27\26\5\0\1\26\4\0\16\26\1\u0175\35\26"+
    "\5\0\1\11\4\0\10\11\1\u0176\43\11\5\0\1\26"+
    "\4\0\12\26\1\354\41\26\5\0\1\26\4\0\14\26"+
    "\1\104\37\26\5\0\1\26\4\0\17\26\1\u0177\34\26"+
    "\5\0\1\26\4\0\32\26\1\u0178\21\26\5\0\1\26"+
    "\4\0\2\26\1\u0179\51\26\5\0\1\26\4\0\26\26"+
    "\1\u017a\25\26\5\0\1\26\4\0\53\26\1\u017b\5\0"+
    "\1\26\4\0\14\26\1\u017c\37\26\5\0\1\26\4\0"+
    "\10\26\1\u017d\43\26\5\0\1\26\4\0\15\26\1\u017e"+
    "\36\26\5\0\1\26\4\0\1\26\1\u017f\52\26\5\0"+
    "\1\26\4\0\7\26\1\302\44\26\5\0\1\26\4\0"+
    "\2\26\1\u0180\51\26\5\0\1\26\4\0\15\26\1\u0181"+
    "\36\26\5\0\1\26\4\0\32\26\1\104\21\26\5\0"+
    "\1\26\4\0\16\26\1\u0182\35\26\5\0\1\26\4\0"+
    "\24\26\1\u0183\27\26\5\0\1\26\4\0\15\26\1\u0184"+
    "\36\26\5\0\1\26\4\0\5\26\1\u0185\46\26\5\0"+
    "\1\26\4\0\5\26\1\u0186\46\26\5\0\1\26\4\0"+
    "\15\26\1\u0187\36\26\5\0\1\26\4\0\47\26\1\175"+
    "\4\26\5\0\1\26\4\0\7\26\1\257\44\26\5\0"+
    "\1\26\4\0\16\26\1\u0188\35\26\5\0\1\26\4\0"+
    "\15\26\1\u0189\36\26\5\0\1\26\4\0\10\26\1\u018a"+
    "\43\26\5\0\1\26\4\0\7\26\1\104\44\26\5\0"+
    "\1\26\4\0\2\26\1\u018b\51\26\5\0\1\26\4\0"+
    "\15\26\1\u018c\36\26\5\0\1\26\4\0\26\26\1\u018d"+
    "\25\26\5\0\1\26\4\0\46\26\1\u018e\5\26\5\0"+
    "\1\26\4\0\2\26\1\u018f\51\26\5\0\1\26\4\0"+
    "\10\26\1\u0190\43\26\5\0\1\26\4\0\3\26\1\u0156"+
    "\50\26\5\0\1\26\4\0\31\26\1\104\22\26\5\0"+
    "\1\26\4\0\3\26\1\u0191\1\26\1\u0192\46\26\5\0"+
    "\1\26\4\0\16\26\1\u0193\35\26\5\0\1\26\4\0"+
    "\5\26\1\u0194\46\26\5\0\1\26\4\0\1\26\1\u0195"+
    "\52\26\5\0\1\26\4\0\15\26\1\u0196\36\26\5\0"+
    "\1\26\4\0\17\26\1\u0197\34\26\5\0\1\26\4\0"+
    "\3\26\1\u0198\50\26\5\0\1\26\4\0\34\26\1\u0199"+
    "\17\26\5\0\1\26\4\0\15\26\1\u019a\36\26\5\0"+
    "\1\26\4\0\1\u019b\53\26\5\0\1\26\4\0\31\26"+
    "\1\u014e\22\26\5\0\1\26\4\0\2\26\1\u019c\51\26"+
    "\5\0\1\26\4\0\6\26\1\u019d\45\26\5\0\1\26"+
    "\4\0\17\26\1\u0137\34\26\5\0\1\26\4\0\3\26"+
    "\1\u019e\50\26\5\0\1\26\4\0\26\26\1\u019f\1\u01a0"+
    "\24\26\5\0\1\26\4\0\36\26\1\u01a1\15\26\5\0"+
    "\1\26\4\0\5\26\1\u01a2\46\26\5\0\1\26\4\0"+
    "\34\26\1\u01a3\17\26\5\0\1\26\4\0\16\26\1\170"+
    "\35\26\5\0\1\26\4\0\7\26\1\102\44\26\5\0"+
    "\1\26\4\0\10\26\1\u01a4\43\26\5\0\1\26\4\0"+
    "\5\26\1\143\46\26\5\0\1\26\4\0\12\26\1\u01a5"+
    "\41\26\5\0\1\26\4\0\42\26\1\u01a6\11\26\5\0"+
    "\1\26\4\0\20\26\1\u01a7\33\26\5\0\1\26\4\0"+
    "\7\26\1\u01a8\44\26\5\0\1\26\4\0\1\26\1\u01a9"+
    "\52\26\5\0\1\26\4\0\12\26\1\u01aa\41\26\5\0"+
    "\1\26\4\0\16\26\1\u01ab\35\26\5\0\1\26\4\0"+
    "\1\26\1\u0177\52\26\5\0\1\26\4\0\33\26\1\u0157"+
    "\20\26\5\0\1\26\4\0\2\26\1\u01ac\51\26\5\0"+
    "\1\26\4\0\15\26\1\u01ad\36\26\5\0\1\26\4\0"+
    "\12\26\1\u01ae\41\26\5\0\1\26\4\0\13\26\1\104"+
    "\40\26\5\0\1\26\4\0\51\26\1\220\2\26\5\0"+
    "\1\26\4\0\5\26\1\u01af\46\26\5\0\1\26\4\0"+
    "\5\26\1\u01b0\46\26\5\0\1\26\4\0\6\26\1\u01b1"+
    "\45\26\5\0\1\26\4\0\6\26\1\305\45\26\5\0"+
    "\1\26\4\0\12\26\1\u01b2\41\26\5\0\1\26\4\0"+
    "\1\26\1\u01b3\52\26\5\0\1\26\4\0\16\26\1\213"+
    "\35\26\5\0\1\26\4\0\2\26\1\u01b4\51\26\5\0"+
    "\1\26\4\0\12\26\1\u01b5\41\26\5\0\1\26\4\0"+
    "\2\26\1\u014d\51\26\5\0\1\26\4\0\47\26\1\u01b6"+
    "\4\26\5\0\1\26\4\0\2\26\1\u01b7\51\26\5\0"+
    "\1\26\4\0\7\26\1\u0184\44\26\5\0\1\26\4\0"+
    "\10\26\1\u01b8\43\26\5\0\1\26\4\0\3\26\1\u01b9"+
    "\12\26\1\u01ba\14\26\1\u0164\20\26\5\0\1\26\4\0"+
    "\2\26\1\u01bb\51\26\5\0\1\26\4\0\12\26\1\u01b6"+
    "\41\26\5\0\1\26\4\0\14\26\1\u01bc\37\26\5\0"+
    "\1\26\4\0\20\26\1\u01bd\33\26\5\0\1\26\4\0"+
    "\23\26\1\u01be\30\26\5\0\1\26\4\0\11\26\1\u01bf"+
    "\42\26\5\0\1\26\4\0\1\26\1\u01c0\52\26\5\0"+
    "\1\26\4\0\26\26\1\u019f\25\26\5\0\1\26\4\0"+
    "\5\26\1\u01c1\46\26\5\0\1\26\4\0\10\26\1\u01c2"+
    "\43\26\5\0\1\26\4\0\16\26\1\u01c3\35\26\5\0"+
    "\1\26\4\0\1\u01c4\53\26\5\0\1\26\4\0\11\26"+
    "\1\u01c5\42\26\5\0\1\26\4\0\35\26\1\337\16\26"+
    "\5\0\1\26\4\0\23\26\1\u01c6\30\26\5\0\1\26"+
    "\4\0\2\26\1\u01c7\51\26\5\0\1\26\4\0\7\26"+
    "\1\337\44\26\5\0\1\26\4\0\5\26\1\146\46\26"+
    "\5\0\1\26\4\0\16\26\1\u01c8\35\26\5\0\1\26"+
    "\4\0\13\26\1\u01c9\40\26\5\0\1\26\4\0\12\26"+
    "\1\337\41\26\5\0\1\26\4\0\2\26\1\u01ca\51\26"+
    "\5\0\1\26\4\0\7\26\1\u01cb\44\26\5\0\1\26"+
    "\4\0\14\26\1\u01cc\37\26\5\0\1\26\4\0\5\26"+
    "\1\u01cd\46\26\5\0\1\26\4\0\11\26\1\u01ce\42\26"+
    "\5\0\1\26\4\0\4\26\1\302\47\26\5\0\1\26"+
    "\4\0\5\26\1\u01cf\46\26\5\0\1\26\4\0\14\26"+
    "\1\u01d0\37\26\5\0\1\26\4\0\2\26\1\u0157\51\26"+
    "\5\0\1\26\4\0\13\26\1\u01d1\40\26\5\0\1\26"+
    "\4\0\7\26\1\u01d2\44\26\5\0\1\26\4\0\6\26"+
    "\1\257\45\26\5\0\1\26\4\0\10\26\1\257\43\26"+
    "\5\0\1\26\4\0\14\26\1\u01d3\37\26\5\0\1\26"+
    "\4\0\16\26\1\u01d4\35\26\5\0\1\26\4\0\5\26"+
    "\1\u01d5\46\26\5\0\1\26\4\0\13\26\1\u01d6\40\26"+
    "\5\0\1\26\4\0\3\26\1\u01d7\50\26\5\0\1\26"+
    "\4\0\5\26\1\u0123\46\26\5\0\1\26\4\0\24\26"+
    "\1\u01d8\27\26\5\0\1\26\4\0\5\26\1\u01a5\46\26"+
    "\5\0\1\26\4\0\2\26\1\143\51\26\5\0\1\26"+
    "\4\0\5\26\1\u01d9\46\26\5\0\1\26\4\0\53\26"+
    "\1\u01da\5\0\1\26\4\0\42\26\1\u01db\11\26\5\0"+
    "\1\26\4\0\3\26\1\u01dc\50\26\5\0\1\26\4\0"+
    "\30\26\1\u01dd\23\26\5\0\1\26\4\0\24\26\1\u01de"+
    "\27\26\5\0\1\26\4\0\5\26\1\u01df\46\26\5\0"+
    "\1\26\4\0\15\26\1\u0138\36\26\5\0\1\26\4\0"+
    "\15\26\1\337\36\26\5\0\1\26\4\0\5\26\1\u01e0"+
    "\46\26\5\0\1\26\4\0\7\26\1\u01e1\44\26\5\0"+
    "\1\26\4\0\11\26\1\u01e2\42\26\5\0\1\26\4\0"+
    "\5\26\1\u01e3\46\26\5\0\1\26\4\0\7\26\1\u01e4"+
    "\44\26\5\0\1\26\4\0\14\26\1\u01e5\37\26\5\0"+
    "\1\26\4\0\7\26\1\u01e6\44\26\5\0\1\26\4\0"+
    "\46\26\1\u01e7\5\26\5\0\1\26\4\0\25\26\1\u01e8"+
    "\26\26\5\0\1\26\4\0\10\26\1\u01e9\43\26\5\0"+
    "\1\26\4\0\5\26\1\u01ea\46\26\5\0\1\26\4\0"+
    "\21\26\1\u01eb\32\26\5\0\1\26\4\0\12\26\1\u01ec"+
    "\41\26\5\0\1\26\4\0\52\26\1\u01ed\1\26\5\0"+
    "\1\26\4\0\4\26\1\u01ee\47\26\5\0\1\26\4\0"+
    "\5\26\1\u01ef\46\26\5\0\1\26\4\0\44\26\1\u01f0"+
    "\7\26\5\0\1\26\4\0\14\26\1\u01f1\37\26\5\0"+
    "\1\26\4\0\5\26\1\u01f2\46\26\5\0\1\26\4\0"+
    "\20\26\1\257\33\26\5\0\1\26\4\0\5\26\1\u01f3"+
    "\46\26\5\0\1\26\4\0\12\26\1\u01f4\41\26\5\0"+
    "\1\26\4\0\7\26\1\u01f5\44\26\5\0\1\26\4\0"+
    "\15\26\1\u01f6\36\26\5\0\1\26\4\0\24\26\1\u01f7"+
    "\1\u01f8\14\26\1\u01f9\11\26\5\0\1\26\4\0\31\26"+
    "\1\u01fa\22\26\5\0\1\26\4\0\15\26\1\u01fb\36\26"+
    "\5\0\1\26\4\0\10\26\1\u01fc\43\26\5\0\1\26"+
    "\4\0\16\26\1\u01fd\35\26\5\0\1\26\4\0\11\26"+
    "\1\u01fe\42\26\5\0\1\26\4\0\33\26\1\u01ff\20\26"+
    "\5\0\1\26\4\0\5\26\1\u0200\46\26\5\0\1\26"+
    "\4\0\15\26\1\u0201\36\26\5\0\1\26\4\0\24\26"+
    "\1\u0202\27\26\5\0\1\26\4\0\15\26\1\u0203\36\26"+
    "\5\0\1\26\4\0\23\26\1\257\30\26\5\0\1\26"+
    "\4\0\1\26\1\u0204\52\26\5\0\1\26\4\0\36\26"+
    "\1\u0205\15\26\5\0\1\26\4\0\1\26\1\u0206\52\26"+
    "\5\0\1\26\4\0\12\26\1\u0207\41\26\5\0\1\26"+
    "\4\0\13\26\1\u0208\40\26\5\0\1\26\4\0\5\26"+
    "\1\u0209\46\26\5\0\1\26\4\0\3\26\1\337\50\26"+
    "\5\0\1\26\4\0\11\26\1\u020a\42\26\5\0\1\26"+
    "\4\0\10\26\1\u014e\43\26\5\0\1\26\4\0\21\26"+
    "\1\u020b\32\26\5\0\1\26\4\0\5\26\1\u020c\24\26"+
    "\1\u020d\21\26\5\0\1\26\4\0\5\26\1\u020e\46\26"+
    "\5\0\1\26\4\0\12\26\1\u020f\41\26\5\0\1\26"+
    "\4\0\2\26\1\u0210\51\26\5\0\1\26\4\0\10\26"+
    "\1\u0211\43\26\5\0\1\26\4\0\22\26\1\u0212\31\26"+
    "\5\0\1\26\4\0\10\26\1\u0213\43\26\5\0\1\26"+
    "\4\0\20\26\1\u0214\33\26\5\0\1\26\4\0\5\26"+
    "\1\u0215\46\26\5\0\1\26\4\0\14\26\1\u0216\37\26"+
    "\5\0\1\26\4\0\2\26\1\u0217\51\26\5\0\1\26"+
    "\4\0\15\26\1\u0218\36\26\5\0\1\26\4\0\2\26"+
    "\1\u0219\51\26\5\0\1\26\4\0\1\26\1\104\52\26"+
    "\5\0\1\26\4\0\7\26\1\u021a\44\26\5\0\1\26"+
    "\4\0\16\26\1\u021b\35\26\5\0\1\26\4\0\7\26"+
    "\1\u021c\44\26\5\0\1\26\4\0\16\26\1\u01b6\35\26"+
    "\5\0\1\26\4\0\13\26\1\u021d\40\26\5\0\1\26"+
    "\4\0\14\26\1\u021e\37\26\5\0\1\26\4\0\2\26"+
    "\1\u0178\51\26\5\0\1\26\4\0\11\26\1\u021f\42\26"+
    "\5\0\1\26\4\0\40\26\1\u0220\13\26\5\0\1\26"+
    "\4\0\14\26\1\u0221\37\26\5\0\1\26\4\0\5\26"+
    "\1\u0222\46\26\5\0\1\26\4\0\15\26\1\u0223\36\26"+
    "\5\0\1\26\4\0\17\26\1\104\34\26\5\0\1\26"+
    "\4\0\3\26\1\u0224\50\26\5\0\1\26\4\0\3\26"+
    "\1\u0225\50\26\5\0\1\26\4\0\2\26\1\337\51\26"+
    "\5\0\1\26\4\0\5\26\1\u0157\46\26\5\0\1\26"+
    "\4\0\5\26\1\305\46\26\5\0\1\26\4\0\1\26"+
    "\1\u0226\52\26\5\0\1\26\4\0\16\26\1\u0227\35\26"+
    "\5\0\1\26\4\0\23\26\1\u0228\30\26\5\0\1\26"+
    "\4\0\31\26\1\u0229\22\26\5\0\1\26\4\0\17\26"+
    "\1\u022a\34\26\5\0\1\26\4\0\13\26\1\u022b\40\26"+
    "\5\0\1\26\4\0\1\u0173\53\26\5\0\1\26\4\0"+
    "\1\26\1\u022c\52\26\5\0\1\26\4\0\12\26\1\u022d"+
    "\41\26\5\0\1\26\4\0\17\26\1\u022e\34\26\5\0"+
    "\1\26\4\0\5\26\1\u022f\46\26\5\0\1\26\4\0"+
    "\1\26\1\u0230\52\26\5\0\1\26\4\0\6\26\1\104"+
    "\45\26\5\0\1\26\4\0\2\26\1\u0231\51\26\5\0"+
    "\1\26\4\0\20\26\1\104\33\26\5\0\1\26\4\0"+
    "\1\26\1\u0232\52\26\5\0\1\26\4\0\33\26\1\104"+
    "\20\26\5\0\1\26\4\0\12\26\1\u0233\41\26\5\0"+
    "\1\26\4\0\2\26\1\104\51\26\5\0\1\26\4\0"+
    "\25\26\1\u0234\26\26\5\0\1\26\4\0\2\26\1\u0227"+
    "\51\26\5\0\1\26\4\0\16\26\1\u0211\35\26\5\0"+
    "\1\26\4\0\41\26\1\u0157\12\26\5\0\1\26\4\0"+
    "\36\26\1\u0184\15\26\5\0\1\26\4\0\16\26\1\u01f5"+
    "\35\26\5\0\1\26\4\0\13\26\1\302\40\26\5\0"+
    "\1\26\4\0\14\26\1\257\37\26\5\0\1\26\4\0"+
    "\5\26\1\u0235\46\26\5\0\1\26\4\0\13\26\1\u0177"+
    "\40\26\5\0\1\26\4\0\5\26\1\u0236\46\26\5\0"+
    "\1\26\4\0\15\26\1\u0237\36\26\5\0\1\26\4\0"+
    "\11\26\1\u0238\42\26\5\0\1\26\4\0\26\26\1\u0239"+
    "\25\26\5\0\1\26\4\0\5\26\1\337\46\26\5\0"+
    "\1\26\4\0\5\26\1\u023a\46\26\5\0\1\26\4\0"+
    "\7\26\1\u023b\44\26\5\0\1\26\4\0\10\26\1\u023c"+
    "\43\26\5\0\1\26\4\0\5\26\1\u023d\46\26\5\0"+
    "\1\26\4\0\15\26\1\u023e\36\26\5\0\1\26\4\0"+
    "\5\26\1\u0184\46\26";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30078];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\3\11\3\1\1\11\11\1\1\11\24\1\2\11"+
    "\11\1\1\11\1\0\u0208\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[574];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  UssLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return TokenType.BAD_CHARACTER;
            } 
            // fall through
          case 22: break;
          case 2: 
            { yybegin(YYINITIAL); return UssTypes.L_PARENTHESIS;
            } 
            // fall through
          case 23: break;
          case 3: 
            { yybegin(YYINITIAL); return UssTypes.R_PARENTHESIS;
            } 
            // fall through
          case 24: break;
          case 4: 
            { yybegin(YYINITIAL); return UssTypes.SEPARATOR;
            } 
            // fall through
          case 25: break;
          case 5: 
            { yybegin(YYINITIAL); return UssTypes.WORD;
            } 
            // fall through
          case 26: break;
          case 6: 
            { yybegin(YYINITIAL); return UssTypes.CRLF;
            } 
            // fall through
          case 27: break;
          case 7: 
            { return UssTypes.SEPARATOR;
            } 
            // fall through
          case 28: break;
          case 8: 
            { return UssTypes.ELEMENT_NAME;
            } 
            // fall through
          case 29: break;
          case 9: 
            { yybegin(BINDING_PARAMS); return UssTypes.DOUBLE_QUOTE;
            } 
            // fall through
          case 30: break;
          case 10: 
            { return UssTypes.BINDING_PROP;
            } 
            // fall through
          case 31: break;
          case 11: 
            { return UssTypes.WORD;
            } 
            // fall through
          case 32: break;
          case 12: 
            { yybegin(YYINITIAL); return UssTypes.DOUBLE_QUOTE;
            } 
            // fall through
          case 33: break;
          case 13: 
            { yybegin(YYINITIAL); return UssTypes.COMMENT;
            } 
            // fall through
          case 34: break;
          case 14: 
            { yybegin(YYINITIAL); return UssTypes.EMPTY_TOKEN;
            } 
            // fall through
          case 35: break;
          case 15: 
            { return UssTypes.BINDING_NAME;
            } 
            // fall through
          case 36: break;
          case 16: 
            { yybegin(YYINITIAL); return UssTypes.CSS;
            } 
            // fall through
          case 37: break;
          case 17: 
            { yybegin(BINDING_DEFINITION); return UssTypes.BINDING;
            } 
            // fall through
          case 38: break;
          case 18: 
            { yybegin(YYINITIAL); return UssTypes.BLOCK;
            } 
            // fall through
          case 39: break;
          case 19: 
            { yybegin(YYINITIAL); return UssTypes.CLASS;
            } 
            // fall through
          case 40: break;
          case 20: 
            { yybegin(YYINITIAL); return UssTypes.IMPORT;
            } 
            // fall through
          case 41: break;
          case 21: 
            { yybegin(ELEMENT_DEFINITION); return UssTypes.ELEMENT;
            } 
            // fall through
          case 42: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
